name: Build MI8SE(sirius) MIUI Kernel

on:
  workflow_dispatch:

jobs:
  KSUForSirius:
    runs-on: ubuntu-18.04
    steps:
      - name: Installing Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y autoconf bc bison build-essential ccache cpio curl flex gawk gcc g++-multilib gcc-multilib git gnupg gperf libc6 libstdc++6 lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libsdl1.2-dev libssl-dev libxml2 libxml2-utils libncurses-dev libiberty-dev lzop kmod imagemagick pngcrush wget zip zlib1g-dev unzip rsync schedtool squashfs-tools xsltproc openjdk-8-jdk language-pack-zh-hans p7zip-full p7zip-rar vim
          sudo apt clean
      - name: Cloning Sources and Toolchain
        run: |
          git clone --depth=1 https://github.com/MiCode/Xiaomi_Kernel_OpenSource.git -b sirius-q-oss --recurse-submodules android_kernel_xiaomi_sdm710
          git clone https://gitlab.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-r445002 --depth=1 --single-branch --no-tags -b 12.0 ~/clang
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-10.0.0_r47 --depth=1 --single-branch --no-tags ~/aarch64-linux-android-4.9
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android-10.0.0_r47 --depth=1 --single-branch --no-tags ~/arm-linux-androideabi-4.9
          #git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b ndk-release-r21 --no-tags ~/aarch64-linux-android-4.9
          git clone https://github.com/SakuraNotStupid/AnyKernel3
          git clone https://github.com/ookiineko/KernelSU
          sudo cp -rv  KernelSU/kernel  android_kernel_xiaomi_sdm710/drivers/kernelsu
          sudo echo "obj-y += kernelsu/" >> android_kernel_xiaomi_sdm710/drivers/Makefile
          sudo echo "CONFIG_KPROBES=y" >> android_kernel_xiaomi_sdm710/arch/arm64/configs/sirius_user_defconfig
          sudo echo "CONFIG_HAVE_KPROBES=y" >> android_kernel_xiaomi_sdm710/arch/arm64/configs/sirius_user_defconfig
          sudo echo "CONFIG_KPROBE_EVENTS=y" >> android_kernel_xiaomi_sdm710/arch/arm64/configs/sirius_user_defconfig
          sudo echo "CONFIG_BUILD_ARM64_DT_OVERLAY=y" >> android_kernel_xiaomi_sdm710/arch/arm64/configs/sirius_user_defconfig
      - name: Compiling Kernel
        run: |
          CLANG=~/clang/bin
          GCC32=~/arm-linux-androideabi-4.9/bin
          GCC64=~/aarch64-linux-android-4.9/bin
          PATH=$CLANG:$GCC64:$GCC32:$PATH
          export PATH
          export ARCH=arm64
          export SUBARCH=arm64
          #export USE_CCACHE=1
          export CLANG_TRIPLE=aarch64-linux-gnu
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          #export CROSS_COMPILE=/home/runner/aarch64-linux-android-4.9/bin/aarch64-linux-android-
          output_dir=out
          pushd android_kernel_xiaomi_sdm710
          make O="$output_dir" \
                      sirius_user_defconfig
          make -j$(nproc) \
                       O="$output_dir" \
                       CC=clang \
                       2>&1 | tee kernel.log
          popd
      - name: Creating Config Info
        run: |
          echo "Device: MI 8 SE
          Code: Sirius/Xmsirius
          Build Code: ${{ github.run_number }}
          Only For LineageOS 20(Official)
          KernelSU For MI8SE" >> INFO.txt
          
      - name: Packaging the Kernel
        run: |
          cp -v android_kernel_xiaomi_sdm710/out/arch/arm64/boot/Image.gz \
                     AnyKernel3/
          pushd AnyKernel3
          7z a -mx9 ../MI8SE-KernelSU_LineageOS20.zip *
          popd
      - name: Uploading Kernel Package to GH-Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: MI8SE-KernelSU_LineageOS20.zip
          name: " MI8SE-KernelSU_LineageOS20"
          tag: " ${{ github.run_number }}_MI8SE-KernelSU_LineageOS20"
          bodyFile: "INFO.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
