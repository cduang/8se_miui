name: Build Ollvm

on:
  workflow_dispatch:

jobs:
  Ollvm_For_Me:
    runs-on: ubuntu-latest
    steps:
      - name: Installing Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y ccache zip flex bison libncurses-dev gawk  libiberty-dev autoconf kmod bc build-essential gcc libc6 curl libstdc++6 git wget libssl-dev cpio p7zip-full
          sudo apt clean
      - name: Cloning Sources and Toolchain
        run: |
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b ndk-release-r21 --depth=1 --single-branch --no-tags ~/aarch64-linux-android-4.9  
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9  -b ndk-release-r21 --depth=1 --single-branch --no-tags ~/arm-linux-androideabi-4.9
          git clone https://gitlab.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-r445002 --depth=1 --single-branch --no-tags -b 11.0 ~/clang
          git clone https://github.com/o2e/OLLVM-9.0.1.git
                  #git clone -b llvm-4.0 https://github.com/cduang/obfuscator.git
      - name: Modifying Config
        run: |    
                  #echo "source \"drivers/kernelsu/Kconfig\"" >> android_kernel_xiaomi_sdm710/drivers/Kconfig
      - name: Compiling Ollvm
        run: |
          CLANG=~/clang/bin
          GCC32=~/arm-linux-androideabi-4.9/bin
          GCC64=~/aarch64-linux-android-4.9/bin
          PATH=$CLANG:$GCC64:$GCC32:$PATH
          export PATH
          export ARCH=arm64
          export SUBARCH=arm64
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export USE_CCACHE=1
          export CCACHE_DIR=~/.ccache
          output_dir=build
          pushd OLLVM-9.0.1
              ccache -M 10G
              make O="$output_dir"
              cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_INCLUDE_TESTS=OFF
              time make -j$(nproc) \
                  O="$output_dir" \
                  CC="ccache clang" 2>&1 |tee ollvm.log
          popd
      - name: Creating Config Info
        run: |
          echo "Device: My Linux
          Code: Linux/C
          Build Code: ${{ github.run_number }}
          Only For Me
          Ollvm For Me" >> INFO.txt
          
      - name: Packaging the Ollvm
        run: |
          mkdir Ollvm
          cp -v OLLVM-9.0.1  Ollvm
          pushd Ollvm
                7z a -mx9 ../Ollvm.zip *
          popd
      - name: Uploading Ollvm Package to GH-Release
        uses: ncipollo/release-action@v1.8.6
        with:
          artifacts: Ollvm.zip
          name: " Ollvm"
          tag: " ${{ github.run_number }}_Ollvm"
          bodyFile: "INFO.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
